在SQL中将字符串分成了6类：char, varchar, text, blob, enum, set

定长字符串  char:  在定义结构的时候旧已经确定了最终的数据存储长度，磁盘空间比阿吉哦浪费，但是效率高例如：身份证，电话号码，

变长字符串   varchar:   在分配空间的时候按照最大的空间分配，但是实际上用了多少是根据具体的数据来确定，节省磁盘空间，但是效率低例如：姓名，地址等


文本型字符串  text/blob:  裹入数据量非常大，通常超过255个字符就会使用文本字符串
  text: 存储文字（二进制实际上都存储路径）
  blob: 存储二进制(通常不用)
  
  
枚举字符串：
  enum: 事先将所有可能出现的结果都设计好，实际存储的数据必须是规定好的数据中的一个
  使用方式：
    定义： enum(可能出现的数据列表);  例如：enum('男','女');
  -- 创建枚举表
  create table my_enum(
    gender enum('男','女','保密')
    )charset utf8;
  -- 插入数据
  insert into my_enum values('男'),('保密');   -- 有效数据
  
  insert into my_enum values('male');   -- 无效数据
  
  -- 因为枚举实际存储的是数值，所以可以直接插入数值
  insert into my_enum values(1),(2);    -- 直接插入数值
  
  
  枚举作用：
    1. 规范数据格式
    2. 节省空间（枚举实际存储的是数值，而不是字符串本身）
    
  枚举选项量65535
  
  枚举原理：
    枚举在进行数据规范的时候，系统会简历一个数字与枚举元素的对应关系（存放在日志中）
    
    
集合:
  集合跟枚举类似，实际存储的是数值，而不是字符串（集合是多选）
  集合中每一个元素都代表一个二进制位，被选中为1，反之为0，最后倒序
  
  集合使用方式：
    定义方式：
      定义： set(元素列表)
      使用： 可以使用元素列表中的元素（多个），用逗号分割
    -- 创建集合表
    create table my_set(
      hobby set('篮球','足球','排球','羽毛球','网球','乒乓球','棒球','桌球')
      )charset utf8;
  -- 插入数据：可以使用多个字符串，也可以使用数值
  insert into my_set values('足球,篮球,网球');
  
  集合的强大在于能够规范数据和节省空间
  
  
  
  MySQL记录长度：MySQL规定任何一条记录最长不能超过65535个字节
  varchar的实际存储长度：
  utf8：21844
  gbk: 32766
  
  MySQL记录中如果有任何一个字段允许为空，那么系统会自动从整个记录中保留一个字节来存储NULL（若想释放NULL锁占用的字节，必须保证所有的字段都不允许为空）
  
  -- 释放NULL
  create table my_utf8(
    age tinyint not null,   -- 1个字节
    name varchar(21844) not null    -- 21844*3 + 2 = 65534个字节
    )charset utf8;
 
  
  MySQL中text文本字符串不占用记录长度，但是text文本字符串也是属于记录的一部分，一定要占用记录中的部分长度：10个字节（保存数据的地址以及长度）
  -- text占用10个字节长度
  create table my_utf8(
    name varchar(21841) not null,   -- 21841*3 + 2 = 65525个字节
    context text not null   -- 10个字节
    )charset utf8;
  
  
  
  
